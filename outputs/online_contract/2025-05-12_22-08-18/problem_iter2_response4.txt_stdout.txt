[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\dataset\train_01.pkl with 5 instances.
→ Best principal utility: 4.03773573646638
→ Best action index:    98
→ Best contract w:       [0.94877393 0.         0.         4.06570984 4.98148626]
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
→ Best principal utility: 4.167710164782192
→ Best action index:    16
→ Best contract w:       [0.         0.16007271 4.28054801 0.         5.92657701]
[*] Instance 0: 1.4949205009739326
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\dataset\train_02.pkl with 5 instances.
→ Best principal utility: 2.2999615997467355
→ Best action index:    99
→ Best contract w:       [0.         0.         0.         1.12446972 3.61685831]
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
→ Best principal utility: 1.1505456638977896
→ Best action index:    0
→ Best contract w:       [0. 0. 0. 0. 0.]
[*] Instance 1: 100.44690071448164
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\dataset\train_03.pkl with 5 instances.
→ Best principal utility: 3.5682527283790857
→ Best action index:    99
→ Best contract w:       [0.         0.         0.         3.94248941 4.68859719]
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
→ Best principal utility: 1.0479610436986975
→ Best action index:    0
→ Best contract w:       [0. 0. 0. 0. 0.]
[*] Instance 2: 101.40257030673216
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\dataset\train_04.pkl with 5 instances.
→ Best principal utility: 4.163132307600002
→ Best action index:    99
→ Best contract w:       [0.77289566 0.         0.         0.         5.2899921 ]
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
→ Best principal utility: 3.172916304295171
→ Best action index:    19
→ Best contract w:       [0.         0.         4.44469496 0.37879264 6.28187027]
[*] Instance 3: 4.5204326759034466
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\dataset\train_05.pkl with 5 instances.
→ Best principal utility: 3.4351046687638447
→ Best action index:    94
→ Best contract w:       [1.23317453 0.         2.77318298 3.78799317 4.20489218]
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
→ Best principal utility: 3.1800344905307223
→ Best action index:    12
→ Best contract w:       [0.         0.         0.         7.26822224 0.        ]
[*] Instance 4: 3.859314034166433
[*] Average:
42.34482764645152
