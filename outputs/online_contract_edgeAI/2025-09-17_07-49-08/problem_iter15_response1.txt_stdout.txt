[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7908 seconds
→ Best principal utility: 0.00015838692787054382
→ The corresponding best action is: 0
→ The corresponding agent utility is: 9.999054535747565e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004113446766405505
→ The corresponding best action is: 0
→ The corresponding agent utility is: 1.302800453132713e-06
→ The principal utility gap is: 0.0006193891649213826-0.0004113446766405505=0.00020804448828083206
→ Agent and principal score:    0 0.00020804448828083206
[*] Instance 0: 0.00020804448828083206
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1251 seconds
→ Best principal utility: 0.0003217142548494903
→ The corresponding best action is: 0
→ The corresponding agent utility is: 1.000007097528427e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00040865880682056067
→ The corresponding best action is: 0
→ The corresponding agent utility is: 3.9886702731225425e-06
→ The principal utility gap is: 0.0006193891649213826-0.00040865880682056067=0.0002107303581008219
→ Agent and principal score:    0 0.0002107303581008219
[*] Instance 1: 0.0002107303581008219
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1425 seconds
→ Best principal utility: -inf
→ The corresponding best action is: None
→ The corresponding agent utility is: None
Traceback (most recent call last):
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\eval.py", line 170, in <module>
    obj, _ = evaluate_llm((_p, _c, _v, _contract_logs))
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\eval.py", line 113, in evaluate_llm
    agent_u = p.dot(inferred_contract) - c
TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'
