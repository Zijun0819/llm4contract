[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.8021 seconds
→ Best principal utility: 0.0004261173849776756
→ The corresponding best action is: 3
→ The corresponding agent utility is: 9.999732162105368e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00040534722219665877
→ The corresponding best action is: 0
→ The corresponding agent utility is: 7.3002548970244805e-06
→ The principal utility gap is: 0.0006193891649213826-0.00040534722219665877=0.0002140419427247238
→ Agent and principal score:    0 0.0002140419427247238
[*] Instance 0: 0.0002140419427247238
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1568 seconds
→ Best principal utility: 0.0004664011064518123
→ The corresponding best action is: 7
→ The corresponding agent utility is: 1.000007097528427e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004088929844535224
→ The corresponding best action is: 0
→ The corresponding agent utility is: 3.754492640160842e-06
→ The principal utility gap is: 0.0006193891649213826-0.0004088929844535224=0.00021049618046786018
→ Agent and principal score:    0 0.00021049618046786018
[*] Instance 1: 0.00021049618046786018
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1962 seconds
→ Best principal utility: 0.0004366879280441244
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0006127719263775879
→ The corresponding best action is: 6
→ The corresponding agent utility is: 6.617238543894647e-06
→ The principal utility gap is: 0.0006193891649213826-0.0006127719263775879=6.617238543794629e-06
→ Agent and principal score:    0 6.617238543794629e-06
[*] Instance 2: 6.617238543794629e-06
[*] Average:
0.0001437184539121262
