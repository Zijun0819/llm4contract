[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7961 seconds
→ Best principal utility: 0.0004587926535651269
→ The corresponding best action is: 4
→ The corresponding agent utility is: 1.0000409788463172e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0003885154157326352
→ The corresponding best action is: 6
→ The corresponding agent utility is: 0.00023087374918884736
→ The principal utility gap is: 0.0006193891649213826-0.0003885154157326352=0.00023087374918874737
→ Agent and principal score:    0 0.00023087374918874737
[*] Instance 0: 0.00023087374918874737
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1667 seconds
→ Best principal utility: 0.0005988817216771024
→ The corresponding best action is: 0
→ The corresponding agent utility is: 9.999732162105368e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004063215326168783
→ The corresponding best action is: 3
→ The corresponding agent utility is: 0.00020215286180321198
→ The principal utility gap is: 0.0006193891649213826-0.0004063215326168783=0.00021306763230450427
→ Agent and principal score:    0 0.00021306763230450427
[*] Instance 1: 0.00021306763230450427
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1713 seconds
→ Best principal utility: 0.0005670280058503584
→ The corresponding best action is: 0
→ The corresponding agent utility is: 1.000007097528427e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.000558820846583181
→ The corresponding best action is: 6
→ The corresponding agent utility is: 6.0568318338301554e-05
→ The principal utility gap is: 0.0006193891649213826-0.000558820846583181=6.0568318338201604e-05
→ Agent and principal score:    0 6.0568318338201604e-05
[*] Instance 2: 6.0568318338201604e-05
[*] Average:
0.00016816989994381773
