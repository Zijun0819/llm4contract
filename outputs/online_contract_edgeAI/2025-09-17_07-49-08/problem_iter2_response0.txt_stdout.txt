[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7748 seconds
→ Best principal utility: 0.0002880005900690366
→ The corresponding best action is: 4
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00029263935229373387
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.00012000812479994937
→ The principal utility gap is: 0.0006193891649213826-0.00029263935229373387=0.0003267498126276487
→ Agent and principal score:    0 0.0003267498126276487
[*] Instance 0: 0.0003267498126276487
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1271 seconds
→ Best principal utility: 0.0002007272560473842
→ The corresponding best action is: 4
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00032493261143398547
→ The corresponding best action is: 2
→ The corresponding agent utility is: 0.0002662187702961546
→ The principal utility gap is: 0.0006193891649213826-0.00032493261143398547=0.0002944565534873971
→ Agent and principal score:    0 0.0002944565534873971
[*] Instance 1: 0.0002944565534873971
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1528 seconds
→ Best principal utility: 0.0002718589825502377
→ The corresponding best action is: 2
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00030511633430810705
→ The corresponding best action is: 1
→ The corresponding agent utility is: 0.00024562892594735103
→ The principal utility gap is: 0.0006193891649213826-0.00030511633430810705=0.0003142728306132755
→ Agent and principal score:    0 0.0003142728306132755
[*] Instance 2: 0.0003142728306132755
[*] Average:
0.00031182639890944044
