[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7506 seconds
→ Best principal utility: 0.0002387330920392306
→ The corresponding best action is: 0
→ The corresponding agent utility is: 9.999054535747565e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00034998846645238884
→ The corresponding best action is: 0
→ The corresponding agent utility is: 6.26590106412944e-05
→ The principal utility gap is: 0.0006193891649213826-0.00034998846645238884=0.00026940069846899373
→ Agent and principal score:    0 0.00026940069846899373
[*] Instance 0: 0.00026940069846899373
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1402 seconds
→ Best principal utility: 0.00016652819035971897
→ The corresponding best action is: 2
→ The corresponding agent utility is: 9.999054535747565e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0003801791337650911
→ The corresponding best action is: 0
→ The corresponding agent utility is: 3.246834332859215e-05
→ The principal utility gap is: 0.0006193891649213826-0.0003801791337650911=0.00023921003115629148
→ Agent and principal score:    0 0.00023921003115629148
[*] Instance 1: 0.00023921003115629148
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1545 seconds
→ Best principal utility: 0.00019947842185121266
→ The corresponding best action is: 2
→ The corresponding agent utility is: 9.999054535747565e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00030390881018266426
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.00010873866691101896
→ The principal utility gap is: 0.0006193891649213826-0.00030390881018266426=0.0003154803547387183
→ Agent and principal score:    0 0.0003154803547387183
[*] Instance 2: 0.0003154803547387183
[*] Average:
0.0002746970281213345
