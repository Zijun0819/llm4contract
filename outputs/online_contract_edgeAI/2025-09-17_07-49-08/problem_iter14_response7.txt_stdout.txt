[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7740 seconds
→ Best principal utility: 0.000522965209816219
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.0000409788463172e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004921219339194859
→ The corresponding best action is: 6
→ The corresponding agent utility is: 0.0001272672310019967
→ The principal utility gap is: 0.0006193891649213826-0.0004921219339194859=0.00012726723100189667
→ Agent and principal score:    0 0.00012726723100189667
[*] Instance 0: 0.00012726723100189667
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1477 seconds
→ Best principal utility: 0.0005988817216771024
→ The corresponding best action is: 3
→ The corresponding agent utility is: 9.999732162105368e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00040639516479584173
→ The corresponding best action is: 3
→ The corresponding agent utility is: 0.00020207922962424857
→ The principal utility gap is: 0.0006193891649213826-0.00040639516479584173=0.00021299400012554084
→ Agent and principal score:    0 0.00021299400012554084
[*] Instance 1: 0.00021299400012554084
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1642 seconds
IC violation for a*=1: best at 5 (Δ=9.82e-08)
→ Best principal utility: 0.0005670280058503584
→ The corresponding best action is: 5
→ The corresponding agent utility is: 1.000007097528427e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0002975668106328588
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.00011508066646082445
→ The principal utility gap is: 0.0006193891649213826-0.0002975668106328588=0.0003218223542885238
→ Agent and principal score:    0 0.0003218223542885238
[*] Instance 2: 0.0003218223542885238
[*] Average:
0.0002206945284719871
