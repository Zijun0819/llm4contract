[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.9242 seconds
The inferred contract is [[0.00000000e+000 0.00000000e+000 5.85589185e-045 0.00000000e+000
  5.46637992e-002 1.12551081e-002 0.00000000e+000 1.67857589e-002
  1.26881117e-002 5.31766207e-001 0.00000000e+000 3.72841016e-001
  1.19010289e-004]
 [3.08680099e-002 0.00000000e+000 6.66474349e-004 0.00000000e+000
  0.00000000e+000 6.27117768e-002 0.00000000e+000 1.63959953e-119
  4.12990255e-001 0.00000000e+000 0.00000000e+000 4.92763484e-001
  1.54543128e-004]
 [1.26080283e-002 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 6.40581425e-002 0.00000000e+000 0.00000000e+000
  1.71273594e-001 0.00000000e+000 7.52060235e-001 5.31451381e-047
  1.30848013e-004]
 [0.00000000e+000 0.00000000e+000 1.60649211e-046 0.00000000e+000
  0.00000000e+000 0.00000000e+000 3.50927134e-001 5.99355713e-131
  0.00000000e+000 0.00000000e+000 4.37595497e-001 2.11477369e-001
  2.27963187e-004]
 [0.00000000e+000 0.00000000e+000 6.62200569e-045 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 1.86972584e-001
  0.00000000e+000 0.00000000e+000 2.80931883e-001 5.32095533e-001
  2.81614432e-004]]
→ Best principal utility: 0.0005411917758492071
→ Inferred agent&principal utility:    0.0 0.0004126474770936832
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 0: 0.00020674168782769934
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1900 seconds
The inferred contract is [[2.20621331e-002 4.58253435e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 8.29767802e-002 9.49105308e-002 0.00000000e+000
  7.90757430e-002 0.00000000e+000 6.75149469e-001 2.21445678e-135
  2.09251758e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  1.47806681e-001 1.58308750e-001 1.67801106e-001 0.00000000e+000
  0.00000000e+000 5.53254695e-070 0.00000000e+000 5.26083463e-001
  2.47272354e-005]
 [8.35976165e-003 0.00000000e+000 4.94551714e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.54536361e-228 5.63516510e-003
  0.00000000e+000 4.84481834e-001 1.55209562e-001 2.96858506e-001
  2.04481284e-004]
 [2.05275612e-003 2.30727064e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 7.74436733e-003 0.00000000e+000
  5.27989797e-001 4.03708726e-066 0.00000000e+000 4.39140373e-001
  1.93642051e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.03265426e-254 1.09608631e-001
  0.00000000e+000 1.67378280e-071 4.24838189e-001 4.65553180e-001
  3.13527524e-004]]
→ Best principal utility: 0.0005903344579166951
→ Inferred agent&principal utility:    0.0 0.0004126474770936832
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 1: 0.00020674168782769934
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2195 seconds
The inferred contract is [[4.20037524e-002 0.00000000e+000 4.21929912e-002 0.00000000e+000
  0.00000000e+000 1.30193098e-002 2.49747062e-001 0.00000000e+000
  0.00000000e+000 4.00413354e-292 1.13359985e-103 6.53036885e-001
  2.54250553e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 1.45733129e-001
  1.22657256e-001 2.46604854e-002 9.62225509e-002 0.00000000e+000
  1.79559730e-002 1.09939284e-287 5.12126945e-001 8.06436604e-002
  1.52625671e-004]
 [0.00000000e+000 0.00000000e+000 8.50391039e-002 7.37625878e-002
  0.00000000e+000 1.64373209e-001 2.55284885e-002 0.00000000e+000
  0.00000000e+000 6.51296611e-001 0.00000000e+000 1.32344559e-274
  9.24970201e-005]
 [0.00000000e+000 3.59795823e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.08811290e-002 0.00000000e+000
  5.63058409e-001 2.60288908e-002 3.34409584e-104 3.64051989e-001
  2.04646621e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 1.04006836e-001
  1.65365636e-087 2.21636325e-001 2.21491767e-001 4.52865072e-001
  2.01625451e-004]]
→ Best principal utility: 0.0004870275838724689
→ Inferred agent&principal utility:    3.480594260498222e-05 0.0005845832223165003
→ Agent and principal score:    0 3.4805942604882226e-05
[*] Instance 2: 3.4805942604882226e-05
[*] Average:
0.00014942977275342697
