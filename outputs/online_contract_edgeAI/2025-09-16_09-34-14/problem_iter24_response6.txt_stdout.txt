[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.8518 seconds
The inferred contract is [[1.26080283e-002 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 6.40581425e-002 0.00000000e+000 0.00000000e+000
  1.71273594e-001 0.00000000e+000 7.52060235e-001 2.01472116e-049
  5.00034592e-001]
 [8.14233018e-002 0.00000000e+000 2.53251783e-003 0.00000000e+000
  1.86896735e-001 0.00000000e+000 0.00000000e+000 4.78938473e-121
  0.00000000e+000 0.00000000e+000 0.00000000e+000 7.29147445e-001
  5.00059806e-001]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  3.77482292e-001 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 6.22517708e-001 0.00000000e+000 0.00000000e+000
  5.00071205e-001]
 [1.19570710e-002 0.00000000e+000 4.31405003e-049 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 3.14462998e-128
  5.23106822e-001 0.00000000e+000 0.00000000e+000 4.64936107e-001
  5.00106393e-001]
 [0.00000000e+000 0.00000000e+000 6.29876436e-051 0.00000000e+000
  0.00000000e+000 0.00000000e+000 5.69355217e-001 4.94902327e-130
  0.00000000e+000 0.00000000e+000 2.50703195e-001 1.79941588e-001
  5.00072246e-001]
 [0.00000000e+000 0.00000000e+000 6.79625537e-050 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.47535198e-001
  0.00000000e+000 0.00000000e+000 1.69647347e-001 3.82817455e-001
  5.00078129e-001]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 5.95741956e-001 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.04258044e-001
  5.00101390e-001]
 [0.00000000e+000 0.00000000e+000 4.19953241e-053 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.29100019e-142
  0.00000000e+000 5.95157713e-001 0.00000000e+000 4.04842287e-001
  5.00114378e-001]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 9.00432525e-002 0.00000000e+000 1.34289625e-001
  1.01490953e-001 6.74176170e-001 0.00000000e+000 0.00000000e+000
  5.00066049e-001]
 [0.00000000e+000 0.00000000e+000 1.14643378e-052 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 1.15961045e-141
  0.00000000e+000 0.00000000e+000 4.65158812e-001 5.34841188e-001
  5.00119665e-001]]
→ Best principal utility: -inf
Traceback (most recent call last):
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\eval.py", line 162, in <module>
    obj, _ = evaluate_llm((_p, _c, _v, _contract_logs))
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\eval.py", line 109, in evaluate_llm
    agent_u = np.dot(p, inferred_contract) - c
TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'
