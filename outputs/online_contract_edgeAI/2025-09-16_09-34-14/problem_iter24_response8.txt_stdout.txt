[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7987 seconds
The inferred contract is [[1.26080283e-002 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 6.40581425e-002 0.00000000e+000 0.00000000e+000
  1.71273594e-001 0.00000000e+000 7.52060235e-001 2.01472116e-049
  1.24514429e-004]
 [8.14233018e-002 0.00000000e+000 2.53251783e-003 0.00000000e+000
  1.86896735e-001 0.00000000e+000 0.00000000e+000 4.78938473e-121
  0.00000000e+000 0.00000000e+000 0.00000000e+000 7.29147445e-001
  2.15256375e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  3.77482292e-001 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 6.22517708e-001 0.00000000e+000 0.00000000e+000
  2.56272642e-004]
 [1.19570710e-002 0.00000000e+000 4.31405003e-049 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 3.14462998e-128
  5.23106822e-001 0.00000000e+000 0.00000000e+000 4.64936107e-001
  3.82866609e-004]
 [0.00000000e+000 0.00000000e+000 6.29876436e-051 0.00000000e+000
  0.00000000e+000 0.00000000e+000 5.69355217e-001 4.94902327e-130
  0.00000000e+000 0.00000000e+000 2.50703195e-001 1.79941588e-001
  2.60017001e-004]
 [0.00000000e+000 0.00000000e+000 6.79625537e-050 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.47535198e-001
  0.00000000e+000 0.00000000e+000 1.69647347e-001 3.82817455e-001
  2.81184105e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 5.95741956e-001 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.04258044e-001
  3.64871504e-004]
 [0.00000000e+000 0.00000000e+000 4.19953241e-053 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.29100019e-142
  0.00000000e+000 5.95157713e-001 0.00000000e+000 4.04842287e-001
  4.11590902e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 9.00432525e-002 0.00000000e+000 1.34289625e-001
  1.01490953e-001 6.74176170e-001 0.00000000e+000 0.00000000e+000
  2.37718098e-004]
 [0.00000000e+000 0.00000000e+000 1.14643378e-052 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 1.15961045e-141
  0.00000000e+000 0.00000000e+000 4.65158812e-001 5.34841188e-001
  4.30607140e-004]]
→ Best principal utility: 0.0005293178327416574
→ Inferred agent&principal utility:    9.274660480473706e-05 0.00045799865545072103
→ Agent and principal score:    0 0.00016139050947066154
[*] Instance 0: 0.00016139050947066154
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2288 seconds
The inferred contract is [[0.00000000e+000 0.00000000e+000 6.24576861e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 3.71399650e-001 0.00000000e+000
  0.00000000e+000 1.92727114e-145 0.00000000e+000 5.66142664e-001
  2.69528085e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 5.58801977e-284 0.00000000e+000
  0.00000000e+000 7.35511401e-086 5.57021848e-001 4.42978152e-001
  4.88229721e-004]
 [4.01308930e-002 0.00000000e+000 5.35987434e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 2.62515952e-002
  0.00000000e+000 8.24561234e-001 5.54575348e-002 0.00000000e+000
  2.41583372e-004]
 [2.04464108e-003 2.29579582e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 7.82984431e-003 0.00000000e+000
  5.25836217e-001 1.01620319e-073 0.00000000e+000 4.41331340e-001
  2.48138047e-004]
 [0.00000000e+000 7.13213587e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.47615929e-001 0.00000000e+000
  1.23128487e-001 0.00000000e+000 6.57934225e-001 1.02612705e-136
  2.13950295e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 7.73031315e-255 4.24696714e-001
  0.00000000e+000 3.04899561e-079 4.48539292e-002 5.30449357e-001
  4.25827115e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 4.38551884e-001 1.03617287e-283 0.00000000e+000
  0.00000000e+000 1.36952380e-085 0.00000000e+000 5.61448116e-001
  3.69433245e-004]
 [3.08853838e-002 0.00000000e+000 6.06638132e-002 0.00000000e+000
  0.00000000e+000 1.16161463e-001 0.00000000e+000 1.02566987e-020
  0.00000000e+000 9.46033693e-002 6.97685970e-001 0.00000000e+000
  2.32845581e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  5.45944961e-001 0.00000000e+000 1.30711915e-287 0.00000000e+000
  0.00000000e+000 1.35122042e-089 0.00000000e+000 4.54055039e-001
  2.45397403e-004]
 [4.77614553e-100 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.41106503e-266 3.07630989e-004
  0.00000000e+000 5.04546570e-001 0.00000000e+000 4.95145799e-001
  4.94143743e-004]]
→ Best principal utility: 0.0004140366484734181
→ Inferred agent&principal utility:    5.39851367732215e-05 0.0005654040281482611
→ Agent and principal score:    0 5.3985136773121467e-05
[*] Instance 1: 5.3985136773121467e-05
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2821 seconds
The inferred contract is [[0.00000000e+000 0.00000000e+000 0.00000000e+000 3.88621775e-001
  2.08802317e-001 0.00000000e+000 0.00000000e+000 0.00000000e+000
  1.98159975e-152 0.00000000e+000 4.02575908e-001 0.00000000e+000
  1.70698217e-004]
 [3.05562012e-002 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  1.17345716e-097 0.00000000e+000 4.79456778e-001 4.89987021e-001
  3.44267824e-004]
 [0.00000000e+000 0.00000000e+000 6.07422171e-002 5.26875627e-002
  0.00000000e+000 1.17409435e-001 1.82346346e-002 0.00000000e+000
  5.11582165e-112 6.63461793e-001 8.74643577e-002 2.93052278e-266
  2.35523405e-004]
 [0.00000000e+000 1.22634780e-001 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 4.35146409e-002 0.00000000e+000
  7.29931358e-001 1.03919221e-001 0.00000000e+000 0.00000000e+000
  2.36409124e-004]
 [0.00000000e+000 0.00000000e+000 1.45673841e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 4.32861711e-001 0.00000000e+000
  1.43493037e-179 3.78370578e-307 2.09330843e-002 5.31637820e-001
  3.24212657e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.68581364e-001
  8.89373712e-114 3.19268717e-002 3.43070559e-002 4.65184708e-001
  2.29489810e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  5.72023291e-001 0.00000000e+000 3.56392432e-126 4.27976709e-001
  3.86584899e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 3.93156402e-002 0.00000000e+000 1.03640301e-001
  2.86267922e-002 0.00000000e+000 8.28417267e-001 0.00000000e+000
  3.53018999e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 4.71007717e-001 5.96294329e-125 5.28992283e-001
  4.42143174e-004]
 [0.00000000e+000 1.28887222e-002 1.02921039e-001 0.00000000e+000
  7.09702687e-002 4.16547623e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 7.71565208e-001
  3.94018742e-004]]
→ Best principal utility: 0.00041746363308014383
→ Inferred agent&principal utility:    2.0666102329965263e-06 0.000617322554688486
→ Agent and principal score:    0 2.0666102328965527e-06
[*] Instance 2: 2.0666102328965527e-06
[*] Average:
7.248075215889319e-05
