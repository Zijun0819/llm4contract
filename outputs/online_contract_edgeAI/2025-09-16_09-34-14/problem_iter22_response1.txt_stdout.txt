[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：2.2468 seconds
The inferred contract is [[1.26080283e-002 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 6.40581425e-002 0.00000000e+000 0.00000000e+000
  1.71273594e-001 0.00000000e+000 7.52060235e-001 2.01471928e-049
  1.38526249e-004]
 [0.00000000e+000 0.00000000e+000 2.14245025e-048 0.00000000e+000
  0.00000000e+000 0.00000000e+000 5.69355219e-001 4.94899519e-130
  0.00000000e+000 0.00000000e+000 2.50703193e-001 1.79941588e-001
  2.89376846e-004]
 [5.81595013e-002 0.00000000e+000 1.80894131e-003 0.00000000e+000
  1.33497668e-001 1.70211987e-001 0.00000000e+000 2.73751224e-119
  0.00000000e+000 0.00000000e+000 0.00000000e+000 6.36321902e-001
  2.20538823e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  9.43705729e-002 6.75324393e-002 0.00000000e+000 1.00717218e-001
  7.61182146e-002 6.61261555e-001 0.00000000e+000 0.00000000e+000
  3.14342599e-004]
 [0.00000000e+000 0.00000000e+000 2.31167911e-047 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.47535198e-001
  0.00000000e+000 0.00000000e+000 1.69647347e-001 3.82817455e-001
  3.12941073e-004]
 [1.19570710e-002 0.00000000e+000 1.46738159e-046 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 3.14463014e-128
  5.23106822e-001 0.00000000e+000 0.00000000e+000 4.64936107e-001
  3.50969293e-004]
 [0.00000000e+000 0.00000000e+000 3.89948141e-050 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 1.15961049e-141
  0.00000000e+000 0.00000000e+000 4.65158812e-001 5.34841188e-001
  4.79282698e-004]
 [0.00000000e+000 0.00000000e+000 1.42842955e-050 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.29100041e-142
  0.00000000e+000 5.95157713e-001 0.00000000e+000 4.04842287e-001
  4.58113638e-004]]
→ Best principal utility: 0.000515306012934696
→ Inferred agent&principal utility:    0.0002065216566630813 0.00040195273775700904
→ Agent and principal score:    0 0.00021743642716437353
[*] Instance 0: 0.00021743642716437353
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：1.0034 seconds
The inferred contract is [[0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.77638764e-257 4.10907370e-001
  0.00000000e+000 3.62884219e-078 4.54824375e-002 5.43610192e-001
  3.60815106e-004]
 [2.27161118e-003 2.55326082e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.76688948e-242 0.00000000e+000
  5.35785943e-001 2.71993744e-074 0.00000000e+000 4.36409838e-001
  2.17178303e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 9.48846186e-002 1.19055219e-257 0.00000000e+000
  0.00000000e+000 2.36908700e-078 5.08681609e-001 3.96433773e-001
  4.63383788e-004]
 [7.01656649e-093 0.00000000e+000 4.14130785e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 2.60037980e-243 9.65664491e-003
  0.00000000e+000 5.78977930e-001 0.00000000e+000 3.69952346e-001
  2.37517185e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 2.69750561e-001 0.00000000e+000
  0.00000000e+000 7.21498832e-003 0.00000000e+000 7.23034451e-001
  3.41314234e-004]
 [0.00000000e+000 1.58187850e-018 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.81978316e-001 0.00000000e+000
  2.47497663e-001 0.00000000e+000 5.70524021e-001 6.61410775e-138
  1.83525854e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  5.45944961e-001 0.00000000e+000 1.52497883e-290 0.00000000e+000
  0.00000000e+000 8.14005529e-089 0.00000000e+000 4.54055039e-001
  2.72474215e-004]
 [4.63145894e-002 5.83181496e-002 5.51700773e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 1.58864807e-011
  0.00000000e+000 3.15278512e-001 5.24918672e-001 0.00000000e+000
  2.21391479e-004]]
→ Best principal utility: 0.0004540452389292166
→ Inferred agent&principal utility:    0.00014898871734100123 0.00045948567707908907
→ Agent and principal score:    0 0.0001599034878422935
[*] Instance 1: 0.0001599034878422935
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：1.5663 seconds
The inferred contract is [[0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 4.71013944e-001 6.71706392e-127 5.28986056e-001
  4.91651078e-004]
 [0.00000000e+000 3.60289112e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.08788148e-002 0.00000000e+000
  5.63830375e-001 2.59797460e-002 1.48145324e-108 3.63282153e-001
  2.04790192e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.58521976e-001
  0.00000000e+000 3.47808610e-002 2.72538230e-116 5.06697163e-001
  2.86744248e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  1.82966557e-107 0.00000000e+000 5.54937621e-001 4.45062379e-001
  5.87765785e-004]
 [0.00000000e+000 0.00000000e+000 6.07422171e-002 5.26875627e-002
  0.00000000e+000 1.17409435e-001 1.82346346e-002 0.00000000e+000
  5.33399824e-112 6.63461793e-001 8.74643577e-002 2.93049892e-266
  2.66248808e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 3.94531005e-002 0.00000000e+000 1.01969801e-001
  2.87268808e-002 0.00000000e+000 8.29850218e-001 0.00000000e+000
  3.60057027e-004]
 [9.59923768e-002 0.00000000e+000 7.35150275e-002 0.00000000e+000
  5.06930491e-002 2.97534017e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 2.67523833e-297 1.35589991e-108 7.50046145e-001
  3.05954577e-004]
 [0.00000000e+000 0.00000000e+000 1.45788868e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 4.33203310e-001 0.00000000e+000
  1.03869998e-179 3.72231629e-307 2.09292168e-002 5.31288586e-001
  3.60506050e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 2.91500366e-001
  1.56620024e-001 0.00000000e+000 0.00000000e+000 1.45305928e-001
  5.78787228e-167 0.00000000e+000 4.06573682e-001 0.00000000e+000
  1.81149181e-004]]
→ Best principal utility: 0.0004352066185978158
→ Inferred agent&principal utility:    3.261129846052449e-05 0.0005758630959595658
→ Agent and principal score:    0 4.352606896181673e-05
[*] Instance 2: 4.352606896181673e-05
[*] Average:
0.00014028866132282793
