[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7575 seconds
The inferred contract is [[1.26080283e-002 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 6.40581425e-002 0.00000000e+000 0.00000000e+000
  1.71273594e-001 0.00000000e+000 7.52060235e-001 2.01472116e-049
  1.98273568e-004]
 [8.14233018e-002 0.00000000e+000 2.53251783e-003 0.00000000e+000
  1.86896735e-001 0.00000000e+000 0.00000000e+000 4.78938473e-121
  0.00000000e+000 0.00000000e+000 0.00000000e+000 7.29147445e-001
  2.84730851e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  3.77482292e-001 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 6.22517708e-001 0.00000000e+000 0.00000000e+000
  3.59144487e-004]
 [1.19570710e-002 0.00000000e+000 4.31405003e-049 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 3.14462998e-128
  5.23106822e-001 0.00000000e+000 0.00000000e+000 4.64936107e-001
  4.63602059e-004]
 [0.00000000e+000 0.00000000e+000 6.29876436e-051 0.00000000e+000
  0.00000000e+000 0.00000000e+000 5.69355217e-001 4.94902327e-130
  0.00000000e+000 0.00000000e+000 2.50703195e-001 1.79941588e-001
  3.59564598e-004]
 [0.00000000e+000 0.00000000e+000 6.79625537e-050 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.47535198e-001
  0.00000000e+000 0.00000000e+000 1.69647347e-001 3.82817455e-001
  4.27863418e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 5.95741956e-001 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.04258044e-001
  4.17484504e-004]
 [0.00000000e+000 0.00000000e+000 4.19953241e-053 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.29100019e-142
  0.00000000e+000 5.95157713e-001 0.00000000e+000 4.04842287e-001
  5.24137366e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 9.00432525e-002 0.00000000e+000 1.34289625e-001
  1.01490953e-001 6.74176170e-001 0.00000000e+000 0.00000000e+000
  3.87404402e-004]
 [0.00000000e+000 0.00000000e+000 1.14643378e-052 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 1.15961045e-141
  0.00000000e+000 0.00000000e+000 4.65158812e-001 5.34841188e-001
  4.84966381e-004]]
→ Best principal utility: 0.00045555869307771935
→ Inferred agent&principal utility:    0.00021268412155103178 0.0003957902728690585
→ Agent and principal score:    0 0.00022359889205232408
[*] Instance 0: 0.00022359889205232408
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1785 seconds
The inferred contract is [[0.00000000e+000 0.00000000e+000 6.24576861e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 3.71399650e-001 0.00000000e+000
  0.00000000e+000 1.92727114e-145 0.00000000e+000 5.66142664e-001
  3.80664228e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 5.58801977e-284 0.00000000e+000
  0.00000000e+000 7.35511401e-086 5.57021848e-001 4.42978152e-001
  5.50045292e-004]
 [4.01308930e-002 0.00000000e+000 5.35987434e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 2.62515952e-002
  0.00000000e+000 8.24561234e-001 5.54575348e-002 0.00000000e+000
  3.09726813e-004]
 [2.04464108e-003 2.29579582e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 7.82984431e-003 0.00000000e+000
  5.25836217e-001 1.01620319e-073 0.00000000e+000 4.41331340e-001
  2.93288663e-004]
 [0.00000000e+000 7.13213587e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.47615929e-001 0.00000000e+000
  1.23128487e-001 0.00000000e+000 6.57934225e-001 1.02612705e-136
  2.87344598e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 7.73031315e-255 4.24696714e-001
  0.00000000e+000 3.04899561e-079 4.48539292e-002 5.30449357e-001
  4.96164316e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 4.38551884e-001 1.03617287e-283 0.00000000e+000
  0.00000000e+000 1.36952380e-085 0.00000000e+000 5.61448116e-001
  4.27633537e-004]
 [3.08853838e-002 0.00000000e+000 6.06638132e-002 0.00000000e+000
  0.00000000e+000 1.16161463e-001 0.00000000e+000 1.02566987e-020
  0.00000000e+000 9.46033693e-002 6.97685970e-001 0.00000000e+000
  3.17286347e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  5.45944961e-001 0.00000000e+000 1.30711915e-287 0.00000000e+000
  0.00000000e+000 1.35122042e-089 0.00000000e+000 4.54055039e-001
  3.77715599e-004]
 [4.77614553e-100 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 1.41106503e-266 3.07630989e-004
  0.00000000e+000 5.04546570e-001 0.00000000e+000 4.95145799e-001
  5.56801324e-004]]
→ Best principal utility: 0.0003575524016082834
→ Inferred agent&principal utility:    5.4910870650370516e-06 0.0006138980778564456
→ Agent and principal score:    0 5.491087064937012e-06
[*] Instance 1: 5.491087064937012e-06
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2388 seconds
The inferred contract is [[0.00000000e+000 0.00000000e+000 0.00000000e+000 3.88621775e-001
  2.08802317e-001 0.00000000e+000 0.00000000e+000 0.00000000e+000
  2.02265677e-152 0.00000000e+000 4.02575908e-001 0.00000000e+000
  2.80737771e-004]
 [3.05561964e-002 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  1.19776999e-097 0.00000000e+000 4.79456707e-001 4.89987096e-001
  3.88422015e-004]
 [0.00000000e+000 0.00000000e+000 6.07422171e-002 5.26875627e-002
  0.00000000e+000 1.17409435e-001 1.82346346e-002 0.00000000e+000
  5.22181703e-112 6.63461793e-001 8.74643577e-002 2.93052278e-266
  3.38200290e-004]
 [0.00000000e+000 1.22634780e-001 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 4.35146409e-002 0.00000000e+000
  7.29931358e-001 1.03919221e-001 0.00000000e+000 0.00000000e+000
  3.34641119e-004]
 [0.00000000e+000 0.00000000e+000 1.45673841e-002 0.00000000e+000
  0.00000000e+000 0.00000000e+000 4.32861711e-001 0.00000000e+000
  1.46465712e-179 3.78370537e-307 2.09330843e-002 5.31637820e-001
  3.97695161e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 4.68639980e-001
  1.16742027e-113 3.19103354e-002 3.45061959e-002 4.64943489e-001
  3.31040194e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  5.72023291e-001 0.00000000e+000 3.56392506e-126 4.27976709e-001
  4.70694420e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 3.93643800e-002 0.00000000e+000 1.03047986e-001
  2.86622810e-002 0.00000000e+000 8.28925354e-001 0.00000000e+000
  4.19586888e-004]
 [0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000
  0.00000000e+000 4.71007717e-001 5.96294457e-125 5.28992283e-001
  5.37329822e-004]
 [0.00000000e+000 1.28887222e-002 1.02921039e-001 0.00000000e+000
  7.09702687e-002 4.16547623e-002 0.00000000e+000 0.00000000e+000
  0.00000000e+000 0.00000000e+000 0.00000000e+000 7.71565208e-001
  5.10811541e-004]]
→ Best principal utility: 0.00031589824160818865
→ Inferred agent&principal utility:    1.554873724643228e-05 0.0005966083936712096
→ Agent and principal score:    0 2.2780771250173015e-05
[*] Instance 2: 2.2780771250173015e-05
[*] Average:
8.39569167891447e-05
