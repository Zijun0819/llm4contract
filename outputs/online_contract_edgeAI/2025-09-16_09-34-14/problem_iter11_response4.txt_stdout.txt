[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7617 seconds
The inferred contract is [[ 1.26080283e-002  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  6.40581425e-002  0.00000000e+000  0.00000000e+000
   1.71273594e-001  0.00000000e+000  7.52060235e-001  2.01472116e-049
  -3.71454860e-004]
 [ 8.14233018e-002  0.00000000e+000  2.53251783e-003  0.00000000e+000
   1.86896735e-001  0.00000000e+000  0.00000000e+000  4.78938473e-121
   0.00000000e+000  0.00000000e+000  0.00000000e+000  7.29147445e-001
   1.47446569e-002]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   3.77482292e-001  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  6.22517708e-001  0.00000000e+000  0.00000000e+000
   5.37570276e-003]
 [ 1.19570710e-002  0.00000000e+000  4.31405003e-049  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  3.14462998e-128
   5.23106822e-001  0.00000000e+000  0.00000000e+000  4.64936107e-001
  -4.30944454e-003]
 [ 0.00000000e+000  0.00000000e+000  6.29876436e-051  0.00000000e+000
   0.00000000e+000  0.00000000e+000  5.69355217e-001  4.94902327e-130
   0.00000000e+000  0.00000000e+000  2.50703195e-001  1.79941588e-001
  -1.22786336e-002]
 [ 0.00000000e+000  0.00000000e+000  6.79625537e-050  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  4.47535198e-001
   0.00000000e+000  0.00000000e+000  1.69647347e-001  3.82817455e-001
   5.59163212e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  5.95741956e-001  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  4.04258044e-001
   2.27701827e-002]
 [ 0.00000000e+000  0.00000000e+000  4.19953241e-053  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  4.29100019e-142
   0.00000000e+000  5.95157713e-001  0.00000000e+000  4.04842287e-001
  -1.05063755e-002]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  9.00432525e-002  0.00000000e+000  1.34289625e-001
   1.01490953e-001  6.74176170e-001  0.00000000e+000  0.00000000e+000
   1.80147854e-002]
 [ 0.00000000e+000  0.00000000e+000  1.14643378e-052  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  1.15961045e-141
   0.00000000e+000  0.00000000e+000  4.65158812e-001  5.34841188e-001
  -2.95035375e-003]]
→ Best principal utility: 0.0006047985582511228
→ Inferred agent&principal utility:    0.0 0.0004126474770936832
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 0: 0.00020674168782769934
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1883 seconds
The inferred contract is [[ 0.00000000e+000  0.00000000e+000  6.24576861e-002  0.00000000e+000
   0.00000000e+000  0.00000000e+000  3.71399650e-001  0.00000000e+000
   0.00000000e+000  1.92727114e-145  0.00000000e+000  5.66142664e-001
  -8.44709357e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  5.58801977e-284  0.00000000e+000
   0.00000000e+000  7.35511401e-086  5.57021848e-001  4.42978152e-001
  -2.16731514e-002]
 [ 4.01308930e-002  0.00000000e+000  5.35987434e-002  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  2.62515952e-002
   0.00000000e+000  8.24561234e-001  5.54575348e-002  0.00000000e+000
  -1.26986658e-002]
 [ 2.04464108e-003  2.29579582e-002  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  7.82984431e-003  0.00000000e+000
   5.25836217e-001  1.01620319e-073  0.00000000e+000  4.41331340e-001
   8.67066434e-003]
 [ 0.00000000e+000  7.13213587e-002  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  1.47615929e-001  0.00000000e+000
   1.23128487e-001  0.00000000e+000  6.57934225e-001  1.02612705e-136
  -9.72668173e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  7.73031315e-255  4.24696714e-001
   0.00000000e+000  3.04899561e-079  4.48539292e-002  5.30449357e-001
  -7.49080298e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  4.38551884e-001  1.03617287e-283  0.00000000e+000
   0.00000000e+000  1.36952380e-085  0.00000000e+000  5.61448116e-001
  -4.24541106e-003]
 [ 3.08853838e-002  0.00000000e+000  6.06638132e-002  0.00000000e+000
   0.00000000e+000  1.16161463e-001  0.00000000e+000  1.02566987e-020
   0.00000000e+000  9.46033693e-002  6.97685970e-001  0.00000000e+000
   6.38379660e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   5.45944961e-001  0.00000000e+000  1.30711915e-287  0.00000000e+000
   0.00000000e+000  1.35122042e-089  0.00000000e+000  4.54055039e-001
  -2.95864635e-003]
 [ 4.77614553e-100  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  1.41106503e-266  3.07630989e-004
   0.00000000e+000  5.04546570e-001  0.00000000e+000  4.95145799e-001
   3.27362697e-003]]
→ Best principal utility: 0.0006999916085519587
→ Inferred agent&principal utility:    0.0 0.0004126474770936832
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 1: 0.00020674168782769934
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1963 seconds
The inferred contract is [[ 0.00000000e+000  0.00000000e+000  0.00000000e+000  3.88621775e-001
   2.08802317e-001  0.00000000e+000  0.00000000e+000  0.00000000e+000
   2.02265677e-152  0.00000000e+000  4.02575908e-001  0.00000000e+000
  -8.28080000e-003]
 [ 3.05561964e-002  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   1.19776999e-097  0.00000000e+000  4.79456707e-001  4.89987096e-001
   2.23219480e-003]
 [ 0.00000000e+000  0.00000000e+000  6.07422171e-002  5.26875627e-002
   0.00000000e+000  1.17409435e-001  1.82346346e-002  0.00000000e+000
   5.22181703e-112  6.63461793e-001  8.74643577e-002  2.93052278e-266
   1.04826982e-003]
 [ 0.00000000e+000  1.22634780e-001  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  4.35146409e-002  0.00000000e+000
   7.29931358e-001  1.03919221e-001  0.00000000e+000  0.00000000e+000
   1.56709328e-003]
 [ 0.00000000e+000  0.00000000e+000  1.45673841e-002  0.00000000e+000
   0.00000000e+000  0.00000000e+000  4.32861711e-001  0.00000000e+000
   1.46465712e-179  3.78370537e-307  2.09330843e-002  5.31637820e-001
   4.79582903e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  4.68639980e-001
   1.16742027e-113  3.19103354e-002  3.45061959e-002  4.64943489e-001
  -3.15727586e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   5.72023291e-001  0.00000000e+000  3.56392506e-126  4.27976709e-001
  -3.35943740e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  3.93643800e-002  0.00000000e+000  1.03047986e-001
   2.86622810e-002  0.00000000e+000  8.28925354e-001  0.00000000e+000
   5.72271936e-003]
 [ 0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  0.00000000e+000
   0.00000000e+000  4.71007717e-001  5.96294457e-125  5.28992283e-001
   1.63007016e-002]
 [ 0.00000000e+000  1.28887222e-002  1.02921039e-001  0.00000000e+000
   7.09702687e-002  4.16547623e-002  0.00000000e+000  0.00000000e+000
   0.00000000e+000  0.00000000e+000  0.00000000e+000  7.71565208e-001
  -1.16735038e-002]]
→ Best principal utility: 0.0006533400319181312
→ Inferred agent&principal utility:    0.0 0.0004126474770936832
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 2: 0.00020674168782769934
[*] Average:
0.00020674168782769932
