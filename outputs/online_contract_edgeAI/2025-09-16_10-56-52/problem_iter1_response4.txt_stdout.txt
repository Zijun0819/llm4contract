[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.8554 seconds
→ Best principal utility: 0.0003482387296921362
→ The corresponding best action is: 10
→ The corresponding agent utility is: 9.999054535747565e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.000316618646772861
→ The corresponding best action is: 1
→ The corresponding agent utility is: 0.00023412661348259705
→ The principal utility gap is: 0.0006193891649213826-0.000316618646772861=0.00030277051814852154
→ Agent and principal score:    0 0.00030277051814852154
[*] Instance 0: 0.00030277051814852154
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1704 seconds
→ Best principal utility: 0.000278305666538036
→ The corresponding best action is: 10
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    6.994062687820904e-05
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.0003427068502154742
→ The principal utility gap is: 0.0006193891649213826-6.994062687820904e-05=0.0005494485380431735
→ Agent and principal score:    0 0.0005494485380431735
[*] Instance 1: 0.0005494485380431735
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1862 seconds
→ Best principal utility: 0.00020384529287530736
→ The corresponding best action is: 2
→ The corresponding agent utility is: 1.0007186052041206e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    6.363524681821757e-05
→ The corresponding best action is: 5
→ The corresponding agent utility is: 0.0005485218840994242
→ The principal utility gap is: 0.0006193891649213826-6.363524681821757e-05=0.000555753918103165
→ Agent and principal score:    0 0.000555753918103165
[*] Instance 2: 0.000555753918103165
[*] Average:
0.00046932432476495334
