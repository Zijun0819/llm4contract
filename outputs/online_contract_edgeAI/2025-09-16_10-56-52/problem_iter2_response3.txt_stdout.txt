[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7696 seconds
→ Best principal utility: 0.0004411185408486037
→ The corresponding best action is: 1
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00020889746568008552
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.0002037500114135977
→ The principal utility gap is: 0.0006193891649213826-0.00020889746568008552=0.00041049169924129705
→ Agent and principal score:    0 0.00041049169924129705
[*] Instance 0: 0.00041049169924129705
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1234 seconds
→ Best principal utility: 0.0004911315146140016
→ The corresponding best action is: 1
→ The corresponding agent utility is: 9.999054535747565e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.00023843955548053436
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.00017420792161314892
→ The principal utility gap is: 0.0006193891649213826-0.00023843955548053436=0.0003809496094408482
→ Agent and principal score:    0 0.0003809496094408482
[*] Instance 1: 0.0003809496094408482
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1427 seconds
→ Best principal utility: 0.00047861861359508353
→ The corresponding best action is: 1
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0001757511224683438
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.00023689635462533946
→ The principal utility gap is: 0.0006193891649213826-0.0001757511224683438=0.0004436380424530388
→ Agent and principal score:    0 0.0004436380424530388
[*] Instance 2: 0.0004436380424530388
[*] Average:
0.0004116931170450614
