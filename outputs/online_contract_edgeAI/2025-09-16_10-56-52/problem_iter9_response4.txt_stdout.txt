[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
Traceback (most recent call last):
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\stats\_kde.py", line 226, in __init__
    self.set_bandwidth(bw_method=bw_method)
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\stats\_kde.py", line 574, in set_bandwidth
    self._compute_covariance()
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\stats\_kde.py", line 586, in _compute_covariance
    self._data_cho_cov = linalg.cholesky(self._data_covariance,
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\linalg\_decomp_cholesky.py", line 101, in cholesky
    c, lower = _cholesky(a, lower=lower, overwrite_a=overwrite_a, clean=True,
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\linalg\_decomp_cholesky.py", line 38, in _cholesky
    raise LinAlgError("%d-th leading minor of the array is not positive "
numpy.linalg.LinAlgError: 2-th leading minor of the array is not positive definite

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\eval.py", line 170, in <module>
    obj, _ = evaluate_llm((_p, _c, _v, _contract_logs))
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\eval.py", line 105, in evaluate_llm
    inferred_agent_setting = llm_agent_solver(v, content)
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py", line 57, in agent_solver_v2
    kde = gaussian_kde(X.T)
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\stats\_kde.py", line 235, in __init__
    raise linalg.LinAlgError(msg) from e
numpy.linalg.LinAlgError: The data appears to lie in a lower-dimensional subspace of the space in which it is expressed. This has resulted in a singular data covariance matrix, which cannot be treated using the algorithms implemented in `gaussian_kde`. Consider performing principal component analysis / dimensionality reduction and using `gaussian_kde` with the transformed data.
