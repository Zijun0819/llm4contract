[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.6903 seconds
→ Best principal utility: 0.0003895666326893838
→ The corresponding best action is: 4
→ The corresponding agent utility is: 9.999054535747565e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0001412560397256354
→ The corresponding best action is: 1
→ The corresponding agent utility is: 0.00040948922052982267
→ The principal utility gap is: 0.0006193891649213826-0.0001412560397256354=0.00047813312519574716
→ Agent and principal score:    0 0.00047813312519574716
[*] Instance 0: 0.00047813312519574716
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.0286 seconds
→ Best principal utility: 0.0003558732807769921
→ The corresponding best action is: 4
→ The corresponding agent utility is: 9.999054535747565e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0002854905789363484
→ The corresponding best action is: 2
→ The corresponding agent utility is: 0.00030566080279379154
→ The principal utility gap is: 0.0006193891649213826-0.0002854905789363484=0.00033389858598503416
→ Agent and principal score:    0 0.00033389858598503416
[*] Instance 1: 0.00033389858598503416
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.0261 seconds
→ Best principal utility: 0.0003746515777317751
→ The corresponding best action is: 4
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0001412560397256354
→ The corresponding best action is: 1
→ The corresponding agent utility is: 0.00040948922052982267
→ The principal utility gap is: 0.0006193891649213826-0.0001412560397256354=0.00047813312519574716
→ Agent and principal score:    0 0.00047813312519574716
[*] Instance 2: 0.00047813312519574716
[*] Average:
0.0004300549454588428
