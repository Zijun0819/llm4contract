[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.8155 seconds
→ Best principal utility: 0.0006307323745887543
→ The corresponding best action is: 4
→ The corresponding agent utility is: 1.0000409788463172e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0002441822864755875
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.0001684651906180957
→ The principal utility gap is: 0.0006193891649213826-0.0002441822864755875=0.00037520687844579505
→ Agent and principal score:    0 0.00037520687844579505
[*] Instance 0: 0.00037520687844579505
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1578 seconds
→ Best principal utility: 0.0006494017527265785
→ The corresponding best action is: 0
→ The corresponding agent utility is: 4.050901101761862e-06
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0006165748786423142
→ The corresponding best action is: 6
→ The corresponding agent utility is: 2.814286279168293e-06
→ The principal utility gap is: 0.0006193891649213826-0.0006165748786423142=2.8142862790683397e-06
→ Agent and principal score:    0 2.8142862790683397e-06
[*] Instance 1: 2.8142862790683397e-06
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1741 seconds
→ Best principal utility: 0.00067913182309015
→ The corresponding best action is: 4
→ The corresponding agent utility is: 9.999986271989544e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004126474770936832
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.0
→ The principal utility gap is: 0.0006193891649213826-0.0004126474770936832=0.00020674168782769934
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 2: 0.00020674168782769934
[*] Average:
0.00019492095085085425
