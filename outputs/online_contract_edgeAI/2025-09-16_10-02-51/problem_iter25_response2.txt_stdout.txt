[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:23: RuntimeWarning: Method L-BFGS-B cannot handle constraints.
  res = linprog(c, A_eq=A_eq, b_eq=b_eq, bounds=bounds, method='highs')
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\base.py:1389: ConvergenceWarning: Number of distinct clusters (2) found smaller than n_clusters (12). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:76: RuntimeWarning: Method L-BFGS-B cannot handle constraints.
  best_action = np.argmax(utils)
The running time is：0.7737 seconds
The inferred contract is [[1.         1.         1.         1.         1.         1.
  1.         1.         1.         1.         1.         1.
  0.00248715]
 [1.         1.         1.         1.         1.         1.
  1.         1.         0.55831312 1.         1.         1.
  0.00233538]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]]
→ Best principal utility: 0.0036900213417499854
→ Inferred agent&principal utility:    0.00045695936759763484 0.0001624297973238477
→ Agent and principal score:    0 0.0004569593675975349
[*] Instance 0: 0.0004569593675975349
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:23: RuntimeWarning: Method L-BFGS-B cannot handle constraints.
  res = linprog(c, A_eq=A_eq, b_eq=b_eq, bounds=bounds, method='highs')
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\base.py:1389: ConvergenceWarning: Number of distinct clusters (1) found smaller than n_clusters (12). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:76: RuntimeWarning: Method L-BFGS-B cannot handle constraints.
  best_action = np.argmax(utils)
The running time is：0.1536 seconds
The inferred contract is [[1.         1.         1.         1.         1.         1.
  1.         1.         1.         1.         1.         1.
  0.00278693]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]
 [0.         0.         0.         0.         0.         0.
  0.         0.         0.         0.         0.         0.
  0.        ]]
→ Best principal utility: 0.0033902419327390774
→ Inferred agent&principal utility:    0.0005272178070803619 9.21713578411207e-05
→ Agent and principal score:    0 0.0005272178070802619
[*] Instance 1: 0.0005272178070802619
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:23: RuntimeWarning: Method L-BFGS-B cannot handle constraints.
  res = linprog(c, A_eq=A_eq, b_eq=b_eq, bounds=bounds, method='highs')
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\base.py:1389: ConvergenceWarning: Number of distinct clusters (1) found smaller than n_clusters (12). Possibly due to duplicate points in X.
  return fit_method(estimator, *args, **kwargs)
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:76: RuntimeWarning: Method L-BFGS-B cannot handle constraints.
  best_action = np.argmax(utils)
The running time is：0.1523 seconds
The inferred contract is [[1.        1.        1.        1.        1.        1.        1.
  1.        1.        1.        1.        1.        0.0025615]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]
 [0.        0.        0.        0.        0.        0.        0.
  0.        0.        0.        0.        0.        0.       ]]
→ Best principal utility: 0.003615666590774227
→ Inferred agent&principal utility:    0.0004785222453806048 0.0001408669195408777
→ Agent and principal score:    0 0.00047852224538050487
[*] Instance 2: 0.00047852224538050487
[*] Average:
0.0004875664733527672
