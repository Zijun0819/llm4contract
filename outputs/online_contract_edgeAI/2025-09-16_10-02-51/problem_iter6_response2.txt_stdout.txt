[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.9086 seconds
The inferred contract is [[1.30544098e-01 4.63091591e-02 4.00228763e-02 7.50341510e-01
  1.84398328e-03 1.79078370e-03 2.86245992e-02 3.79308295e-04
  1.43681861e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  2.67173066e-04]
 [4.04442946e-01 5.57213139e-01 3.12529950e-02 6.23613312e-03
  3.15249224e-04 3.06154171e-04 1.43972555e-04 6.48469251e-05
  2.45639945e-05 0.00000000e+00 0.00000000e+00 0.00000000e+00
  5.28270974e-04]
 [3.61686994e-01 2.21907207e-02 6.09612481e-01 5.09830794e-03
  5.20566293e-04 5.05547768e-04 2.37739711e-04 1.07080750e-04
  4.05621539e-05 0.00000000e+00 0.00000000e+00 0.00000000e+00
  3.66585929e-04]
 [6.85507686e-02 8.04833284e-01 3.55319387e-02 2.52429058e-02
  2.59197227e-03 4.11337937e-02 1.18373922e-03 5.33170010e-04
  2.03984276e-02 0.00000000e+00 0.00000000e+00 0.00000000e+00
  4.42682754e-04]
 [6.88709668e-02 3.81878763e-01 3.56959022e-02 5.06494160e-01
  2.60383631e-03 2.52871469e-03 1.18915746e-03 5.35610447e-04
  2.02889066e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  4.11997657e-04]
 [7.66906165e-01 5.30412444e-02 2.96093298e-02 2.10351610e-02
  5.85024157e-02 5.02772253e-02 1.48903729e-02 5.56978571e-03
  1.68300012e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  4.02886940e-04]
 [4.84103620e-01 3.18393792e-02 1.77734384e-02 4.62768083e-01
  1.29652430e-03 1.25911911e-03 5.92115389e-04 2.66695706e-04
  1.01024248e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  4.58875579e-04]
 [1.14248858e-01 4.53447965e-01 5.92186430e-02 4.20703038e-02
  3.23620942e-01 4.19523291e-03 1.97285701e-03 8.88597902e-04
  3.36600601e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  2.65162256e-04]
 [1.71363981e-01 3.75003245e-01 8.88231097e-02 6.31019333e-02
  6.47944030e-03 2.90431469e-01 2.95912410e-03 1.33282415e-03
  5.04873363e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  5.00127701e-01]
 [1.14441699e-01 6.22487601e-01 5.93218374e-02 1.92016045e-01
  4.32711553e-03 4.20227669e-03 1.97616943e-03 8.90089856e-04
  3.37165753e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  5.00096254e-01]
 [1.71373324e-01 5.02535011e-01 8.88279790e-02 6.31053927e-02
  6.47979552e-03 6.29285110e-03 1.59547848e-01 1.33289722e-03
  5.04901041e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  5.00112003e-01]
 [1.14248882e-01 1.06082383e-01 5.77908529e-01 4.20702618e-02
  4.31986369e-03 7.35632049e-02 1.97285755e-03 7.94974175e-02
  3.36600695e-04 0.00000000e+00 0.00000000e+00 0.00000000e+00
  5.00135614e-01]]
→ Best principal utility: 0.0001377635855771382
→ Inferred agent&principal utility:    0.0005097955337025145 4.094972655294363e-05
→ Agent and principal score:    0 0.0005784394383684389
[*] Instance 0: 0.0005784394383684389
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
Traceback (most recent call last):
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\mixture\_gaussian_mixture.py", line 328, in _compute_precision_cholesky
    cov_chol = linalg.cholesky(covariance, lower=True)
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\linalg\_decomp_cholesky.py", line 101, in cholesky
    c, lower = _cholesky(a, lower=lower, overwrite_a=overwrite_a, clean=True,
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\linalg\_decomp_cholesky.py", line 38, in _cholesky
    raise LinAlgError("%d-th leading minor of the array is not positive "
numpy.linalg.LinAlgError: 11-th leading minor of the array is not positive definite

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\eval.py", line 162, in <module>
    obj, _ = evaluate_llm((_p, _c, _v, _contract_logs))
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\eval.py", line 101, in evaluate_llm
    inferred_agent_setting = llm_agent_solver(v, content)
  File "E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py", line 37, in agent_solver
    scaled_probs = scaler.fit_transform(prob_matrix)
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\mixture\_base.py", line 180, in fit
    self.fit_predict(X, y)
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\mixture\_base.py", line 247, in fit_predict
    self._m_step(X, log_resp)
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\mixture\_bayesian_mixture.py", line 739, in _m_step
    self._estimate_precisions(nk, xk, sk)
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\mixture\_bayesian_mixture.py", line 586, in _estimate_precisions
    self.precisions_cholesky_ = _compute_precision_cholesky(
  File "D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\mixture\_gaussian_mixture.py", line 330, in _compute_precision_cholesky
    raise ValueError(estimate_precision_error_message)
ValueError: Fitting the mixture model failed because some components have ill-defined empirical covariance (for instance caused by singleton or collapsed samples). Try to decrease the number of components, or increase reg_covar.
