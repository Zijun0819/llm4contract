[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：1.0471 seconds
→ Best principal utility: 0.0005869230728730331
→ The corresponding best action is: 89
→ The corresponding agent utility is: 0.0
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004126474770936832
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.0
→ The principal utility gap is: 0.0006193891649213826-0.0004126474770936832=0.00020674168782769934
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 0: 0.00020674168782769934
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2536 seconds
→ Best principal utility: 0.0007112343253810331
→ The corresponding best action is: 36
→ The corresponding agent utility is: 0.0
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004126474770936832
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.0
→ The principal utility gap is: 0.0006193891649213826-0.0004126474770936832=0.00020674168782769934
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 1: 0.00020674168782769934
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2572 seconds
→ Best principal utility: 0.00032877625434321524
→ The corresponding best action is: 59
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004890677839012821
→ The corresponding best action is: 1
→ The corresponding agent utility is: 6.167747635417591e-05
→ The principal utility gap is: 0.0006193891649213826-0.0004890677839012821=0.00013032138102010043
→ Agent and principal score:    0 0.00013032138102010043
[*] Instance 2: 0.00013032138102010043
[*] Average:
0.00018126825222516637
