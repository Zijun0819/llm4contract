[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:16: OptimizeWarning: Unrecognized options detected: {'tol': 1e-10}. These will be passed to HiGHS verbatim.
  def solve_mini_lp(w, u_principal):
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\optimize\_linprog_highs.py:355: OptimizeWarning: Unrecognized options detected: {'tol': 1e-10}
  res = _highs_wrapper(c, A.indptr, A.indices, A.data, lhs, rhs,
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7968 seconds
→ Best principal utility: 0.00034930306457834937
→ The corresponding best action is: 11
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0005850739955334888
→ The corresponding best action is: 5
→ The corresponding agent utility is: 2.708313538415284e-05
→ The principal utility gap is: 0.0006193891649213826-0.0005850739955334888=3.4315169387893725e-05
→ Agent and principal score:    0 3.4315169387893725e-05
[*] Instance 0: 3.4315169387893725e-05
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:16: OptimizeWarning: Unrecognized options detected: {'tol': 1e-10}. These will be passed to HiGHS verbatim.
  def solve_mini_lp(w, u_principal):
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\optimize\_linprog_highs.py:355: OptimizeWarning: Unrecognized options detected: {'tol': 1e-10}
  res = _highs_wrapper(c, A.indptr, A.indices, A.data, lhs, rhs,
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2291 seconds
→ Best principal utility: 0.00033378905940271156
→ The corresponding best action is: 63
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0005876282400100011
→ The corresponding best action is: 6
→ The corresponding agent utility is: 3.176092491148139e-05
→ The principal utility gap is: 0.0006193891649213826-0.0005876282400100011=3.176092491138146e-05
→ Agent and principal score:    0 3.176092491138146e-05
[*] Instance 1: 3.176092491138146e-05
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:16: OptimizeWarning: Unrecognized options detected: {'tol': 1e-10}. These will be passed to HiGHS verbatim.
  def solve_mini_lp(w, u_principal):
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\optimize\_linprog_highs.py:355: OptimizeWarning: Unrecognized options detected: {'tol': 1e-10}
  res = _highs_wrapper(c, A.indptr, A.indices, A.data, lhs, rhs,
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2409 seconds
→ Best principal utility: 0.0003287762543432145
→ The corresponding best action is: 63
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.000489067783901282
→ The corresponding best action is: 1
→ The corresponding agent utility is: 6.167747635417605e-05
→ The principal utility gap is: 0.0006193891649213826-0.000489067783901282=0.00013032138102010054
→ Agent and principal score:    0 0.00013032138102010054
[*] Instance 2: 0.00013032138102010054
[*] Average:
6.546582510645858e-05
