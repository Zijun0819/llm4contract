[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:18: OptimizeWarning: Unrecognized options detected: {'tol': 1e-12}. These will be passed to HiGHS verbatim.
  res = linprog(-w, A_eq=A_eq, b_eq=b_eq, bounds=[(0, 1)] * n_outcomes, method='highs', options={'tol': 1e-14})
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\optimize\_linprog_highs.py:355: OptimizeWarning: Unrecognized options detected: {'tol': 1e-12}
  res = _highs_wrapper(c, A.indptr, A.indices, A.data, lhs, rhs,
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：1.0336 seconds
→ Best principal utility: 0.000347014201118814
→ The corresponding best action is: 14
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0005844862878772022
→ The corresponding best action is: 5
→ The corresponding agent utility is: 2.7670843040439545e-05
→ The principal utility gap is: 0.0006193891649213826-0.0005844862878772022=3.49028770441804e-05
→ Agent and principal score:    0 3.49028770441804e-05
[*] Instance 0: 3.49028770441804e-05
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:18: OptimizeWarning: Unrecognized options detected: {'tol': 1e-12}. These will be passed to HiGHS verbatim.
  res = linprog(-w, A_eq=A_eq, b_eq=b_eq, bounds=[(0, 1)] * n_outcomes, method='highs', options={'tol': 1e-14})
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\optimize\_linprog_highs.py:355: OptimizeWarning: Unrecognized options detected: {'tol': 1e-12}
  res = _highs_wrapper(c, A.indptr, A.indices, A.data, lhs, rhs,
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2463 seconds
→ Best principal utility: 0.00033891642944734767
→ The corresponding best action is: 33
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0005905548572230106
→ The corresponding best action is: 6
→ The corresponding agent utility is: 2.88343076984719e-05
→ The principal utility gap is: 0.0006193891649213826-0.0005905548572230106=2.8834307698371925e-05
→ Agent and principal score:    0 2.8834307698371925e-05
[*] Instance 1: 2.8834307698371925e-05
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\gpt.py:18: OptimizeWarning: Unrecognized options detected: {'tol': 1e-12}. These will be passed to HiGHS verbatim.
  res = linprog(-w, A_eq=A_eq, b_eq=b_eq, bounds=[(0, 1)] * n_outcomes, method='highs', options={'tol': 1e-14})
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\scipy\optimize\_linprog_highs.py:355: OptimizeWarning: Unrecognized options detected: {'tol': 1e-12}
  res = _highs_wrapper(c, A.indptr, A.indices, A.data, lhs, rhs,
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2451 seconds
→ Best principal utility: 0.0003472470952881578
→ The corresponding best action is: 42
→ The corresponding agent utility is: 9.996344030316351e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.000498687654360593
→ The corresponding best action is: 1
→ The corresponding agent utility is: 5.205760589486508e-05
→ The principal utility gap is: 0.0006193891649213826-0.000498687654360593=0.00012070151056078958
→ Agent and principal score:    0 0.00012070151056078958
[*] Instance 2: 0.00012070151056078958
[*] Average:
6.147956510111397e-05
