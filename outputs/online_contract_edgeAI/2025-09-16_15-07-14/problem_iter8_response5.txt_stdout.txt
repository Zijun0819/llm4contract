[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.7430 seconds
→ Best principal utility: 0.0003470142856896966
→ The corresponding best action is: 14
→ The corresponding agent utility is: 9.996344030316351e-17
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0005844863242351521
→ The corresponding best action is: 5
→ The corresponding agent utility is: 2.7670806682489597e-05
→ The principal utility gap is: 0.0006193891649213826-0.0005844863242351521=3.490284068623044e-05
→ Agent and principal score:    0 3.490284068623044e-05
[*] Instance 0: 3.490284068623044e-05
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1950 seconds
→ Best principal utility: 0.0003295854654435708
→ The corresponding best action is: 20
→ The corresponding agent utility is: 1.0007186052041206e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.000586224689729703
→ The corresponding best action is: 6
→ The corresponding agent utility is: 3.316447519177948e-05
→ The principal utility gap is: 0.0006193891649213826-0.000586224689729703=3.316447519167954e-05
→ Agent and principal score:    0 3.316447519167954e-05
[*] Instance 1: 3.316447519167954e-05
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.2368 seconds
→ Best principal utility: 0.000347240798782784
→ The corresponding best action is: 17
→ The corresponding agent utility is: 1.0007186052041206e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004998123661193979
→ The corresponding best action is: 1
→ The corresponding agent utility is: 5.093289413606019e-05
→ The principal utility gap is: 0.0006193891649213826-0.0004998123661193979=0.00011957679880198466
→ Agent and principal score:    0 0.00011957679880198466
[*] Instance 2: 0.00011957679880198466
[*] Average:
6.254803822663155e-05
