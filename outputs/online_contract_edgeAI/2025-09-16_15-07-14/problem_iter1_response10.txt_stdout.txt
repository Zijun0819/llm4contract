[*] Running ...
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_01.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.6949 seconds
→ Best principal utility: 0.00010449964276637882
→ The corresponding best action is: 7
→ The corresponding agent utility is: 1.0001765041178778e-16
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0003051421851864327
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.00010750529190725055
→ The principal utility gap is: 0.0006193891649213826-0.0003051421851864327=0.00031424697973494987
→ Agent and principal score:    0 0.00031424697973494987
[*] Instance 0: 0.00031424697973494987
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_02.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1120 seconds
→ Best principal utility: 0.00037062552702931377
→ The corresponding best action is: 10
→ The corresponding agent utility is: 0.0
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0004126474770936832
→ The corresponding best action is: 0
→ The corresponding agent utility is: 0.0
→ The principal utility gap is: 0.0006193891649213826-0.0004126474770936832=0.00020674168782769934
→ Agent and principal score:    0 0.00020674168782769934
[*] Instance 1: 0.00020674168782769934
[*] Dataset loaded: E:\Coding\pythonProject\llm4contract\problems\online_contract_edgeAI\dataset\train_03.pkl with 3 instances.
→ Best principal utility: 0.0006193891649213826
→ The corresponding best action is: 6
→ The corresponding agent utility is: 1.000007097528427e-16
D:\Software\anaconda3\envs\llm4contract\lib\site-packages\sklearn\cluster\_kmeans.py:1419: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(
The running time is：0.1214 seconds
→ Best principal utility: 0.00034239841283611815
→ The corresponding best action is: 10
→ The corresponding agent utility is: -1.2675225503319003e-21
→ The oracle principal utility:    0.0006193891649213826
→ Inferred principal utility:    0.0002922165922791003
→ The corresponding best action is: 1
→ The corresponding agent utility is: 0.00025852866797635777
→ The principal utility gap is: 0.0006193891649213826-0.0002922165922791003=0.00032717257264228226
→ Agent and principal score:    0 0.00032717257264228226
[*] Instance 2: 0.00032717257264228226
[*] Average:
0.00028272041340164384
